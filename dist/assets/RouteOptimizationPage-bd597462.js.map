{"version":3,"file":"RouteOptimizationPage-bd597462.js","sources":["../../src/pages/RouteOptimizationPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Button, LoadingSpinner } from '@/components/common';\nimport { RouteOptimizationComponent } from '@/components/features/RouteOptimization';\nimport { useRouteAnalytics } from '@/hooks/useRouteOptimization';\nimport { RoutePoint } from '@/types/route';\n\nexport const RouteOptimizationPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { analytics, isLoading: analyticsLoading, refreshAnalytics } = useRouteAnalytics();\n  \n  const [origin, setOrigin] = useState<RoutePoint | null>(null);\n  const [destination, setDestination] = useState<RoutePoint | null>(null);\n\n  // Parse URL parameters for preset locations\n  useEffect(() => {\n    const originLat = searchParams.get('originLat');\n    const originLon = searchParams.get('originLon');\n    const originName = searchParams.get('originName');\n    const destLat = searchParams.get('destLat');\n    const destLon = searchParams.get('destLon');\n    const destName = searchParams.get('destName');\n\n    if (originLat && originLon) {\n      setOrigin({\n        latitude: parseFloat(originLat),\n        longitude: parseFloat(originLon),\n        name: originName || '出発地'\n      });\n    }\n\n    if (destLat && destLon) {\n      setDestination({\n        latitude: parseFloat(destLat),\n        longitude: parseFloat(destLon),\n        name: destName || '目的地'\n      });\n    }\n  }, [searchParams]);\n\n  const handleLocationSet = (type: 'origin' | 'destination') => {\n    // In a real implementation, this would open a map picker\n    // For now, we'll use the Tokyo location from the xroad conversation\n    const tokyoLocation = {\n      latitude: 35.701835,\n      longitude: 139.763417,\n      name: type === 'origin' ? '東京ドクターカー基地' : '東京医科歯科大学病院'\n    };\n\n    if (type === 'origin') {\n      setOrigin(tokyoLocation);\n    } else {\n      setDestination(tokyoLocation);\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    \n    if (hours > 0) {\n      return `${hours}時間${remainingMinutes}分`;\n    }\n    return `${minutes}分`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* ヘッダー */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => navigate('/cases')}\n                className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n              \n              <div>\n                <h1 className=\"text-xl font-semibold text-gray-900\">xROAD ルート最適化</h1>\n                <p className=\"text-sm text-gray-500\">\n                  リアルタイム交通データによる最適ルート検索\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={refreshAnalytics}\n                disabled={analyticsLoading}\n              >\n                📊 分析更新\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* メインコンテンツ */}\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div className=\"px-4 py-6 sm:px-0\">\n          \n          {/* 位置設定セクション */}\n          <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">位置設定</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              \n              {/* 出発地設定 */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  出発地\n                </label>\n                {origin ? (\n                  <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"font-medium text-green-900\">{origin.name}</div>\n                        <div className=\"text-sm text-green-600\">\n                          {origin.latitude.toFixed(4)}, {origin.longitude.toFixed(4)}\n                        </div>\n                      </div>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => setOrigin(null)}\n                      >\n                        変更\n                      </Button>\n                    </div>\n                  </div>\n                ) : (\n                  <Button\n                    onClick={() => handleLocationSet('origin')}\n                    className=\"w-full border-dashed border-2 border-gray-300 text-gray-600\"\n                    variant=\"outline\"\n                  >\n                    📍 出発地を設定\n                  </Button>\n                )}\n              </div>\n\n              {/* 目的地設定 */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  目的地\n                </label>\n                {destination ? (\n                  <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"font-medium text-blue-900\">{destination.name}</div>\n                        <div className=\"text-sm text-blue-600\">\n                          {destination.latitude.toFixed(4)}, {destination.longitude.toFixed(4)}\n                        </div>\n                      </div>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => setDestination(null)}\n                      >\n                        変更\n                      </Button>\n                    </div>\n                  </div>\n                ) : (\n                  <Button\n                    onClick={() => handleLocationSet('destination')}\n                    className=\"w-full border-dashed border-2 border-gray-300 text-gray-600\"\n                    variant=\"outline\"\n                  >\n                    🏥 目的地を設定\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* ルート最適化コンポーネント */}\n          <RouteOptimizationComponent\n            currentLocation={origin ? { latitude: origin.latitude, longitude: origin.longitude } : undefined}\n            onRouteSelected={(route) => {\n              console.log('Route selected:', route);\n            }}\n            onNavigationStart={(route) => {\n              console.log('Navigation started:', route);\n              alert('ナビゲーションアプリに連携しました');\n            }}\n            className=\"mb-6\"\n          />\n\n          {/* 分析ダッシュボード */}\n          {analytics && (\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6\">xROAD活用実績</h2>\n              \n              {/* KPI Cards */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n                <div className=\"bg-gradient-to-r from-green-400 to-green-600 rounded-lg p-4 text-white\">\n                  <div className=\"text-sm opacity-90\">ルート最適化</div>\n                  <div className=\"text-2xl font-bold\">{analytics.totalRoutesOptimized}</div>\n                  <div className=\"text-sm opacity-90\">回実行</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-blue-400 to-blue-600 rounded-lg p-4 text-white\">\n                  <div className=\"text-sm opacity-90\">予測精度</div>\n                  <div className=\"text-2xl font-bold\">{Math.round(analytics.averageAccuracy * 100)}%</div>\n                  <div className=\"text-sm opacity-90\">平均精度</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-purple-400 to-purple-600 rounded-lg p-4 text-white\">\n                  <div className=\"text-sm opacity-90\">時間短縮</div>\n                  <div className=\"text-2xl font-bold\">{formatTime(analytics.timeSaved)}</div>\n                  <div className=\"text-sm opacity-90\">累計短縮</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-orange-400 to-orange-600 rounded-lg p-4 text-white\">\n                  <div className=\"text-sm opacity-90\">最適時間帯</div>\n                  <div className=\"text-2xl font-bold\">{analytics.mostEfficientTimeSlots[0]?.hour || '--'}時</div>\n                  <div className=\"text-sm opacity-90\">最効率</div>\n                </div>\n              </div>\n\n              {/* 時間帯別効率性 */}\n              <div className=\"mb-8\">\n                <h3 className=\"text-md font-medium text-gray-800 mb-4\">時間帯別効率性</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                  {analytics.mostEfficientTimeSlots.map((slot: any, index: number) => (\n                    <div key={index} className=\"bg-gray-50 rounded-lg p-3\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {slot.hour}:00-{slot.hour + 1}:00\n                      </div>\n                      <div className=\"text-xs text-gray-600 mt-1\">\n                        平均速度: {slot.averageSpeed.toFixed(0)}km/h\n                      </div>\n                      <div className=\"text-xs text-gray-600\">\n                        信頼度: {Math.round(slot.reliability * 100)}%\n                      </div>\n                      <div className=\"mt-2\">\n                        <div className=\"bg-gray-200 rounded-full h-2\">\n                          <div \n                            className=\"bg-green-500 h-2 rounded-full\"\n                            style={{ width: `${slot.reliability * 100}%` }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* xROAD API情報 */}\n              <div className=\"border-t pt-6\">\n                <h3 className=\"text-md font-medium text-gray-800 mb-4\">xROAD API統合状況</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">JARTIC交通量API</span>\n                      <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                        🟢 接続中\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">DRM-PF ルート検索</span>\n                      <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                        🟢 接続中\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">リアルタイム更新</span>\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\n                        🔄 5分間隔\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div className=\"text-sm text-gray-600\">\n                      <div className=\"font-medium mb-1\">対象エリア</div>\n                      <div>東京都心部 6km × 6km</div>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      <div className=\"font-medium mb-1\">交通量観測点</div>\n                      <div>約2,600地点（直轄国道）</div>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      <div className=\"font-medium mb-1\">データ更新</div>\n                      <div>5分値（20分遅延）</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {analyticsLoading && (\n            <div className=\"flex justify-center py-8\">\n              <LoadingSpinner size=\"lg\" />\n              <span className=\"ml-3 text-gray-600\">分析データを読み込み中...</span>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};"],"names":["RouteOptimizationPage","navigate","useNavigate","searchParams","useSearchParams","analytics","analyticsLoading","refreshAnalytics","useRouteAnalytics","origin","setOrigin","useState","destination","setDestination","useEffect","originLat","originLon","originName","destLat","destLon","destName","handleLocationSet","type","tokyoLocation","formatTime","seconds","minutes","hours","remainingMinutes","jsxs","jsx","Button","RouteOptimizationComponent","route","_a","slot","index","LoadingSpinner"],"mappings":"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"}