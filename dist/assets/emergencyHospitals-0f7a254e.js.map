{"version":3,"file":"emergencyHospitals-0f7a254e.js","sources":["../../src/data/emergencyHospitals.ts"],"sourcesContent":["// 東京都心部の救急対応病院データ\nexport interface EmergencyHospital {\n  id: string;\n  name: string;\n  latitude: number;\n  longitude: number;\n  address: string;\n  phone: string;\n  emergencyLevel: 'primary' | 'secondary' | 'tertiary';\n  specialties: string[];\n  hasER: boolean;\n  hasICU: boolean;\n  acceptsTrauma: boolean;\n  distance?: number; // 現在地からの距離（km）\n}\n\nexport const emergencyHospitals: EmergencyHospital[] = [\n  {\n    id: \"hospital-001\",\n    name: \"東京大学医学部附属病院\",\n    latitude: 35.7016,\n    longitude: 139.7658,\n    address: \"東京都文京区本郷7-3-1\",\n    phone: \"03-3815-5411\",\n    emergencyLevel: \"tertiary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"循環器科\", \"脳神経外科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-002\", \n    name: \"順天堂大学医学部附属順天堂医院\",\n    latitude: 35.7022,\n    longitude: 139.7644,\n    address: \"東京都文京区本郷3-1-3\",\n    phone: \"03-3813-3111\",\n    emergencyLevel: \"tertiary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"整形外科\", \"脳神経外科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-003\",\n    name: \"東京医科歯科大学医学部附属病院\",\n    latitude: 35.7024,\n    longitude: 139.7635,\n    address: \"東京都文京区湯島1-5-45\",\n    phone: \"03-3813-6111\",\n    emergencyLevel: \"tertiary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"循環器科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-004\",\n    name: \"日本医科大学付属病院\",\n    latitude: 35.7069,\n    longitude: 139.7533,\n    address: \"東京都文京区千駄木1-1-5\",\n    phone: \"03-3822-2131\",\n    emergencyLevel: \"secondary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"小児科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-005\",\n    name: \"慈恵会医科大学附属病院\",\n    latitude: 35.6678,\n    longitude: 139.7456,\n    address: \"東京都港区西新橋3-25-8\",\n    phone: \"03-3433-1111\",\n    emergencyLevel: \"tertiary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"循環器科\", \"脳神経外科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-006\",\n    name: \"聖路加国際病院\",\n    latitude: 35.6724,\n    longitude: 139.7745,\n    address: \"東京都中央区明石町9-1\",\n    phone: \"03-3541-5151\",\n    emergencyLevel: \"secondary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"産婦人科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-007\",\n    name: \"東京都立墨東病院\",\n    latitude: 35.7118,\n    longitude: 139.8267,\n    address: \"東京都墨田区江東橋4-23-15\",\n    phone: \"03-3633-6151\",\n    emergencyLevel: \"tertiary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"外傷科\", \"熱傷科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-008\",\n    name: \"国立国際医療研究センター病院\",\n    latitude: 35.7011,\n    longitude: 139.7280,\n    address: \"東京都新宿区戸山1-21-1\",\n    phone: \"03-3202-7181\",\n    emergencyLevel: \"tertiary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"感染症科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-009\",\n    name: \"東京医科大学病院\",\n    latitude: 35.6959,\n    longitude: 139.7254,\n    address: \"東京都新宿区西新宿6-7-1\",\n    phone: \"03-3342-6111\",\n    emergencyLevel: \"secondary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"循環器科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: true\n  },\n  {\n    id: \"hospital-010\",\n    name: \"虎の門病院\",\n    latitude: 35.6694,\n    longitude: 139.7478,\n    address: \"東京都港区虎ノ門2-2-2\",\n    phone: \"03-3588-1111\",\n    emergencyLevel: \"secondary\",\n    specialties: [\"救急科\", \"外科\", \"内科\", \"循環器科\"],\n    hasER: true,\n    hasICU: true,\n    acceptsTrauma: false\n  }\n];\n\n// 現在地から近い病院を取得する関数\nexport const getNearbyHospitals = (\n  currentLat: number, \n  currentLon: number, \n  maxDistance: number = 10 // km\n): EmergencyHospital[] => {\n  const calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n    const R = 6371; // Earth's radius in kilometers\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n              Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n              Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n  };\n\n  return emergencyHospitals\n    .map(hospital => ({\n      ...hospital,\n      distance: calculateDistance(currentLat, currentLon, hospital.latitude, hospital.longitude)\n    }))\n    .filter(hospital => hospital.distance! <= maxDistance)\n    .sort((a, b) => a.distance! - b.distance!);\n};\n\n// 救急レベルでフィルタリング\nexport const getHospitalsByEmergencyLevel = (level: 'primary' | 'secondary' | 'tertiary'): EmergencyHospital[] => {\n  return emergencyHospitals.filter(hospital => hospital.emergencyLevel === level);\n};\n\n// 特定の専門科目を持つ病院を取得\nexport const getHospitalsBySpecialty = (specialty: string): EmergencyHospital[] => {\n  return emergencyHospitals.filter(hospital => \n    hospital.specialties.some(s => s.includes(specialty))\n  );\n};"],"names":["emergencyHospitals","getNearbyHospitals","currentLat","currentLon","maxDistance","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","a","hospital","b"],"mappings":"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"}